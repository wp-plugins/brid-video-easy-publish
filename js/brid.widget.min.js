/**
 * Brid Widget
 * Copyright (C) 2015 by Brid.tv
 * Do not change or modify code below
 * @author Brid.tv https://brid.tv
 * License: This software is not free to modify.
 */
var $BridWidget = function(v, config){

  //Default Config
  this.config = {
                  'autoplay': 0, 
                  'color':0, 
                  'height':360, 
                  'items':10, 
                  'ratio':0, 
                  'thumbNumber':3, 
                  'playlistType':1,
                  'offset': 10,             //Space (margin) between thumbs
                  //'maxPlayerHeight' : 70,   //Maximum player height in percentage (70% of the widget height will be player)
                  'maxInnerContent' : 97,   //Maximum inner content of the widget in percentage
                };

  this.isMobile = config.isMobile;
  this.bridWidget = jQuery(v);
  this.player = null;
  this.playerDiv = this.bridWidget.find('.brid');
  this.playerId = this.playerDiv.attr('id');
  this.playlist = this.bridWidget.find('.brid-pl');



  this.bridWidgetPlaylist = this.bridWidget.find('.BridWidgetPlaylist');
  
  if(this.isMobile){
    this.bridWidgetCheck = this.bridWidget.find('.brid-widget-check'); //Mobile only
   
    this.bridWidgetWrapper = this.bridWidget.parent();
    
    //this.bridRandId = 'bridWidget-' + config.randId;
    this.playlist.attr('id', 'brid-pl'+config.randId);
    this.playlist.css('top', '0px');
    //this.playlist.css('height', config.height+'px');
    //this.bridWidget.css('height', config.height+'px');
    this.bridWidgetWrapper.css('height', config.height+'px');
    //this.bridWidgetPlaylist.css('height', config.height+'px');

    //this.bridWidget.parent().css('height',config.height+'px');
    
    this.playerDiv.hide();

    this.bridWidget.css({'position' : 'relative',  'width' : '100%', 'overflow' : 'hidden'}); // 'overflow-y' : 'scroll'


  }

  this.left = this.bridWidget.find('.bridWidgetGoToLeft');
  this.right = this.bridWidget.find('.bridWidgetGoToRight');


  if(this.isMobile){
    //Append share screen only for mobile
    var shares = ['fb', 'tw', 'gp', 'rd', 'link', 'embed2'], shareDivs='';
    for(var i in shares){
      shareDivs += '<div class="BridWShare '+shares[i]+'"></div>';
    }
    this.bridWidgetWrapper.append("<div class='BridWidgetEmbed'><input class='bridWidget-embed' type='text'></div><div class='bridClose'></div><div class='BridWidgetShares'>"+shareDivs+"<div class='clear'></div></div>");
    this.bridWidgetEmbed = this.bridWidgetWrapper.find('.BridWidgetEmbed');
    this.embed =  this.bridWidgetWrapper.find('.bridWidget-embed');
    this.bridWidgetShares = this.bridWidgetWrapper.find('.BridWidgetShares'); //Mobile only
    this.closeDiv = this.bridWidgetWrapper.find('.bridClose');
  }

  this.bridWidgetThumb = this.bridWidget.find('.bridWidgetThumb');
  this.items = config.items; 
  this.itemsLoaded = this.items;
  this.errorPixel = 0;
  this.correctedThumbNum = 0; //Number of thumbs that margin is corrected by errorPixel
  //Merge sent config with default config
  this.config = jQuery.extend(this.config, config);
  
  //console.log("Config merge", this.config);

  var widgetWidth = parseInt(this.bridWidget.width());

  if(widgetWidth>=850){

    this.config.thumbNumber = 4;
  }

  /**
   * Maximum size of the inner widget box
   * Player and playlist have a 97% width of full widget
   * @type {int} 
   */
  this.width = parseInt((parseInt(this.bridWidget.width()) * this.config.maxInnerContent )/100);
  //Define min Thumb number 
  this.config.thumbNumber = (this.config.thumbNumber < 2) ?  2 : this.config.thumbNumber;
  //Define max Thumb number
  this.config.thumbNumber = (this.config.thumbNumber > 5) ?  5 : this.config.thumbNumber;
  //Thumb width
  this.thumbWidth = parseInt((this.width - ((this.config.thumbNumber - 1) * this.config.offset)) / this.config.thumbNumber); 
  

  console.log('width', this.width);
  console.log('widgetWidth', widgetWidth);
  console.log('thumbWidth', this.thumbWidth);
  //var playerHeight = ((config.height* this.maxPlayerHeight )/100);

  //var playlistHeight = config.height - playerHeight-10; //5px player top

  
  //alert(this.bridWidget.width());
  // ratio width and height of thumb    1 = 4:3, 0 = 16:9
  this.ratioW = 16;
  this.ratioH = 9;
  
  if(!this.config.ratio)
  {
    this.ratioW = 4;
    this.ratioH = 3;
  }
  
  this.thumbHeight = parseInt((this.thumbWidth*this.ratioH)/this.ratioW);



  //Calculate arrow size 40% of thumbHeight only if arrowSize is smaller than 28px (default size)

  this.arrowSize =  (this.thumbHeight) * 40 / 100;

  if(this.arrowSize<28){
    this.left.css('background-size', (this.arrowSize/2)+'px '+this.arrowSize+'px');
    this.right.css('background-size', (this.arrowSize/2)+'px '+this.arrowSize+'px');
  }

  var playlistHeight = this.thumbHeight + 15;
  //Player height is widget height - (Thumb space height) - 10
  var playerHeight = config.height - playlistHeight-10;

  //size of play button  
  this.smallplayWidth = 20; 
  this.smallplayHeight = 22;

  if(this.thumbWidth < 130 )
  {
    this.smallplayHeight = 17;
    this.smallplayWidth = 16;
  }

  //MOBILE 
  if(this.isMobile){
    playlistHeight = config.height;
    this.thumbWidth = ((this.bridWidget.width())*9)/10;
    this.thumbHeight = (3*this.thumbWidth)/4;
    this.playerHeight = this.thumbHeight;
    this.playerWidth = this.thumbWidth;

    this.bridWidgetPlaylist.css('width', this.bridWidget.width()+'px');


    if(this.color == 1)
    {
        this.bridWidget.addClass('bridWidgetBlack');
        this.closeDiv.addClass('closeBlack');
        this.bridWidgetShares.addClass('BridWidgetSharesBlack');
        this.embed.addClass('embedBlack');
        this.bridWidgetEmbed.addClass('BridWidgetEmbedBlack');
    }
  }

  this.playlist.css('height', playlistHeight);

  this.playlistWidth = parseInt(this.width);

  console.log('playlistWidth', parseInt(this.width));
  
  //alert(this.config.playerId);

  this.playerConfig = {"id":this.config.playerId,"width": parseInt(this.width),"height":playerHeight,"autoplay": this.config.autoplay , "playlist":{"id":"0","mode":"latest","items":this.items},"video_type":"0"};
 
  this.mar = (parseInt(this.bridWidget.width()) - this.width)/2; //left and right margin of player and playlist
  this.mar = parseInt(this.mar);


  //this.playerConfig.id = config.playerId;
  //this.playerConfig.height = playerHeight;
  
  this.playlistUrl = config.playlist; 
  
  if(!this.isMobile)
    this.bridWidget.css('height',config.height);

  this.pluginUrl = config.plugin_url;
  this.noImage = config.plugin_url + config.noImage;
  this.playerConfig.video_type = (config.playlistType == 0 || config.playlistType==3) ? 0 : 1;

  if(config.playlistType==2 || config.playlistType==3){

    this.playerConfig.playlist.mode = 'channel';
    this.playerConfig.playlist.id = this.config.categoryId; 
  }


  console.log(this.playerConfig);
  
  this.left.css('height', playlistHeight);
  this.right.css('height', playlistHeight);


  this.playlist.css({'width' : this.playlistWidth, 'margin-left' : this.mar, 'margin-right' : this.mar});

  this.leftVisible = false; // left arrow visible
  this.rightVisible = true; // right aroww visible

  this.color = this.config.color; // if 0 - white, if 1 - black, 2- transparent

  if(this.color == 1)
  {
    this.bridWidget.attr('class', 'bridWidget bridWidgetBlack');
  }
  if(this.color == 2) {//transaprent
    this.bridWidget.css({'background-color' : 'transparent', 'border' : 'none'});
  }

  this.l = this.bridWidgetPlaylist.css('left');
  if(this.l != 'auto')
  {
    this.l = parseInt(this.l);
  }

  if(this.l == 'auto' || this.l == 0)
  {
      this.left.css('display', 'none');
  }

  //Mobile
  this.margins = function()
  {
      var widgetW = w.bridWidget.width();
      var margin = ((widgetW - w.thumbWidth)/2) +5;
      return margin;
  }
  //Mobile
  this.thumbClickMobile = function(e){

      var ads = $bp(w.playerId).getAdInProgress();
      if(ads){ return false; }

      w.bridWidgetCheck.css('height', '30px');

      jQuery(w.player).hide();
      w.bridWidgetPlaylist.find('.bridWidgetThumb').each(function(k,v){ 
        jQuery(v).css('visibility', 'visible');
      });
      
      w.bridWidgetEmbed.hide();
      w.closeDiv.hide();
      w.bridWidgetShares.hide();
      w.nn = false;
      w.cd = false;

      var index = parseInt(jQuery(this).attr('data-index'));
      var indexForPlay = index;
      if(!w.noYoutube)
      {
        index = index-1;
      }

      var position = jQuery(this).position();
      var t = position.top + 10;

      console.log('Top', t, 'pos', position, 'index', index);
        
      w.bridWidgetCheck.css({'background' : 'url("'+w.pluginUrl+'/img/wp_parts/CheckBox.svg")no-repeat center', 'top' : t});
      w.bridWidgetCheck.attr('data-index',index);
      w.playIndex = index;
       
      jQuery(this).css('visibility', 'hidden');

      var margin = w.margins();

      // 'top':t,
        //'margin':0+' '+ margin +'px'
      w.playerDiv.css({ 'width':w.thumbWidth, 'height':w.thumbHeight, 'position':'absolute', 'top':t, 'display':'block', 'z-index': '2', 'margin-left': '4%'});

      $bp(w.playerId).playByIndex(indexForPlay);
      $bp(w.playerId).onResize();

      w.bridWidgetCheck.css('display', 'block');
  }

  this.thumbClick = function(e){

    var index = parseInt(jQuery(this).attr('data-index'));
    var ads = $bp(e.data.playerId).getAdInProgress();
    if(ads)
    {
      return false;
    }
    console.log("pusti index", index);

    $bp(e.data.playerId).playByIndex(index);
  }

  this.toHHMMSS = function (sec_numb) {
    if(sec_numb==undefined){
      sec_numb = 0;
    }
    sec_numb    = parseInt(sec_numb);
    var hours   = Math.floor(sec_numb / 3600);
    var minutes = Math.floor((sec_numb - (hours * 3600)) / 60);
    var seconds = sec_numb - (hours * 3600) - (minutes * 60);
    
    if (hours   < 10) {hours   = "0"+hours;}
    if (minutes < 10) {minutes = "0"+minutes;}
    if (seconds < 10) {seconds = "0"+seconds;}
    return  ((hours!='00') ? hours+':' : '') +minutes+':'+seconds;
  }

  this.goLeft = function(e){
  
    if(w.l == 'auto')
    {
      w.l = 0;
    }
    if(w.l >= 0)
    {
      return false;
    } 

    if(w.rightVisible == false)
    {     
      w.right.css('display', 'block');
      w.rightVisible = true;
    }
    var test = w.l + (w.playlistWidth + w.config.offset);// - w.offset);

    //console.log('Test', test, 'w.l', w.l)
               
    //Prevent moving off the left edge
    if(test > 0)
    {

      w.l = w.l + Math.abs(w.l);
      //console.log('teeeeest', w.l)
    }
    else 
    {
      
      //Move
      w.l = w.l + w.playlistWidth + w.config.offset;

      //console.log('W.L', w.l)
    }
    if(w.l >= 0)
    {
      w.left.css("display", 'none'); 
      w.leftVisible = false;
    }
    /*
    else
    {
      w.l = w.l + w.offset;
    }   */    
    
    w.bridWidgetPlaylist.animate({
      left: w.l,
    }, 'normal', function() {
          // Animation complete.
    });
  }
  this.goRight = function(e){
      
    if(w.l=='auto'){
      w.l = 0;
    }

    if(Math.abs(w.l-w.playlistWidth) >= w.bridWidgetPlaylistWidth){
        return false;
    } 
    w.left.css("display",'block');
    

    //w.left.css("display",'block');
    w.leftVisible = true;

    w.hoverVisible();
    
    var test = w.l - (w.playlistWidth + w.config.offset);
    w.widthLeft = w.bridWidgetPlaylistWidth - Math.abs(test);

    //console.log('w.l', w.l, 'playlistWidth', w.playlistWidth, 'test', test, 'widthLeft', w.widthLeft);

    if(w.widthLeft <= w.playlistWidth)
    {
      w.l = w.l - w.widthLeft - w.config.offset - ((w.correctedThumbNum)*(w.errorPixel/2));
      w.right.css('display', 'none');
      w.rightVisible = false;

      //console.log('If:', w.l, 'w.correctedThumbNum', w.correctedThumbNum, 'w.errorPixel', w.errorPixel);

    }else
    {

      w.l = w.l - w.playlistWidth;
      w.l = w.l - w.config.offset;

      //console.log('Else:', w.l);
    }

    //console.log('Move', w.l);

    w.bridWidgetPlaylist.animate({    
      left: w.l,
    }, 'normal', function() {
          // Animation complete  
    });
  }

  this.left.on('click', this, this.goLeft);
  this.right.on('click', this, this.goRight);

  var w = this;

  this.onAdStart = function(e)
  {
    jQuery(w.bridWidgetCheck).css('display', 'none');

  }
  this.onAdEnd = function(e)
  {
    jQuery(w.bridWidgetCheck).css('display', 'block');
  }
  //Mobile only
  this.playerReady = function(params){

    $bp(w.playerId).add('adStart', w.onAdStart);
    $bp(w.playerId).add('adEnd', w.onAdEnd);
    //Show playlist after player loads, to prevent icons splash effect
    w.playlist.fadeIn();
  }
  
  Brid.forceConfigLoad = true;

  console.log('playerConfig', this.playerConfig);

  /*if(this.isMobile){
    this.player = $bp(this.playerId, this.playerConfig, this.playerReady);
  }else{
    */
  this.player = $bp(this.playerId, this.playerConfig, this.playerReady);  
  //}
  
  jQuery('#'+ this.playerId).css({'margin-left' : this.mar, 'margin-right' : this.mar, 'top' : '3px'});
  
  
  this.loadPlaylist = function(){

    

    jQuery.ajax({
        url: w.playlistUrl
      }).done(function( data ) {
          w.videoLength = data.Video.length;
          w.data = data;
         
          if(w.videoLength>0)
          {
            var  appendString = '';
            for(var i in data.Video){
                  
                  var v = data.Video[i];
            
              if(typeof v == 'object'){

                    var title = v.name;
                    var titleSubStr = title.substring(0,40);

                    //console.log('v', v);

                    if(title.length > 40)
                    {
                      titleSubStr = titleSubStr + '...';
                    }
                            
                    if(v.image=='' || v.image==null)
                    {
                      v.image = w.noImage;
                    }
                      if(w.config.playlistType==1 || w.config.playlistType==2)
                      {
                          if(i!=0)
                          { //Youtube remove first <div class="brid-widget-black" style="width:80px;height:45px;">
                            appendString += '<div class="bridWidgetThumb" title="'+escape(v.name)+'" data-index="'+i+'"><div class="brid-widget-black" style="width:'+w.thumbWidth+'px;height:'+w.thumbHeight+'px;"></div><img src="'+w.pluginUrl+'img/smallplay.svg" onerror="'+w.pluginUrl+'img/thumb_404.png" class="bridWidgetSmallPlay"><div class="brid-widget-title">'+titleSubStr+'</div><div class="brid-widget-time">'+w.toHHMMSS(v.duration)+'</div><img class="snapshot" src="'+v.image+'" width="'+w.thumbWidth+'px" height="'+w.thumbHeight+'"/></div>';
                          }
                      }else{
                            //None-Youtube list
                            appendString += '<div class="bridWidgetThumb" title="'+escape(v.name)+'" data-index="'+i+'"><div class="brid-widget-black" style="width:'+w.thumbWidth+'px;height:'+w.thumbHeight+'px;"></div><img src="'+w.pluginUrl+'img/smallplay.svg" onerror="'+w.pluginUrl+'img/thumb_404.png" class="bridWidgetSmallPlay"><div class="brid-widget-title">'+titleSubStr+'</div><div class="brid-widget-time">'+w.toHHMMSS(v.duration)+'</div><img class="snapshot" src="'+v.image+'" width="'+w.thumbWidth+'px" height="'+w.thumbHeight+'px"/></div>';
                      }
                }
              }

              w.bridWidgetPlaylist.append(appendString);
            
              
          }else
          {
            if(data.Video.name!=undefined){
              v = data.Video;
              w.bridWidgetPlaylist.append('<div class="bridWidgetThumb" title="'+escape(v.name)+'" data-index="'+i+'"><div class="brid-widget-black" style="width:'+w.thumbWidth+'px;height:'+w.thumbHeight+'px;"></div><img src="'+w.pluginUrl+'img/smallplay.svg" onerror="'+w.pluginUrl+'img/thumb_404.png" class="bridWidgetSmallPlay"><div class="brid-widget-title">'+v.name+'</div><div class="brid-widget-time">'+w.toHHMMSS(v.duration)+'</div><img class="snapshot" src="'+v.image+'" width="'+w.thumbWidth+'px" height="'+w.thumbHeight+'px"/></div>')
              }
          }

            if(w.isMobile){

               w.organizeThumbsMobile(w);

            }else{

              w.organizeThumbsDesktop(w);
            }

            w.bridWidgetPlaylist.fadeIn();

          });

  }
  this.smallPlayIcon = function (){
    var top = (w.thumbHeight-50)/2;
    var left = (w.thumbWidth-50)/2;
    jQuery('.bridWidgetSmallPlay').css({'top':top+'px', 'left':left+'px', 'display':'block'});
  }

  this.refresh = function(e) {
    w.myScroll.refresh();
              
  }

  this.thumbChecked = function(e)
  {
 
    e.stopPropagation();
  
    w.bridWidgetShares.css('display','none');
    w.bridWidgetEmbed.css('display', 'none');
    w.closeDiv.css('display','none');
      
    jQuery(w.bridWidgetCheck).css('background', 'url("'+w.pluginUrl+'/img/wp_parts/CheckBox.svg")no-repeat center');

    var dataIndex = jQuery(this).attr('data-index');

    if(dataIndex != w.datai)
    {
      w.n = false;
      w.datai = dataIndex;
    }

    if(w.n == false)
    {   
      jQuery(this).css('background','url("'+w.pluginUrl+'/img/wp_parts/CheckBox_State_2.svg")no-repeat center');
      w.bridWidgetShares.css('display','block');
      w.n = true;
    }
    else
    {
      jQuery(this).css('background-color','url("'+w.pluginUrl+'/img/wp_parts/CheckBox.svg")no-repeat center');
      w.bridWidgetShares.css('display','none');
      w.n = false;
    }

    w.bridWidgetShares.find('.BridWShare').each(function(k,v){
      jQuery(v).attr('data-val', dataIndex);
    });

       
    var scrollDisplay = w.bridWidgetWrapper.find('.iScrollIndicator').css('display');
    if(scrollDisplay == 'none')
    {
      w.bridWidgetShares.css('width', '100%');
      w.bridWidgetEmbed.css('width', '89%');
      w.closeDiv.css('right', '1px');
    }
  }
  //Close embed screen
  this.closeEmbed = function()
  {
    w.bridWidgetEmbed.css('display', 'none');
    w.nn = false;
    w.closeDiv.css('display', 'none');
    w.cd = false;
  }
  //Click on share icon on mobile version
  this.shareClick = function(e)
  {
      var dataIndex = jQuery(this).attr('data-index'); //index of share elemet, 0:fb, 1:tw, 2:gp, 3:rd, 4:link, 5:embed 
      var numThumb = jQuery(this).attr('data-val'); 
      
      var video =  w.bridWidgetPlaylist.find('.bridWidgetThumb')[numThumb];
      var title = jQuery(video).attr('title');
      
      var description = w.data.Video[numThumb].description;
      var playlistId = w.data.Video[numThumb].id; //jQuery(video).attr('data-id');

      var text = (Brid.Util.isDev() ? 'http://dev.' : 'https://') + 'btv.social/' + playlistId + '_' +  w.config.playerId;
     
      var url = '';
       
      switch (parseInt(dataIndex)) {
      case 0:
        // facebook
        text += '/#fb';
        text = encodeURIComponent(text);
        url = 'http://www.facebook.com/sharer/sharer.php?u=' + text + '&title=' + title + '&summary=' + description;
        break;
      case 1:
        // twitter
        text += '/#tw';
        text = encodeURIComponent(text);
        url = "http://twitter.com/home?status="+title+": "+text;
        break;
      case 2:
        // google plus
        text += '/#gp';
        url = "https://plus.google.com/share?hl=en&url=" + text;
        break;
      case 3:
        // reddit
        text += '/#rd';
        text = encodeURIComponent(text);
        url = "http://www.reddit.com/submit?title= "+ title + "&text=" + description + "&url=" + text;
        break;
      case 4:
         // copy link
        w.embed.val('');
        text += '/#cp';
        w.bridWidgetEmbed.css('display', 'block');
        w.nn = true;
        w.closeDiv.css('display', 'block');
        w.cd = true;
         w.embed.val(text);
         w.embed.select();
        break;
      case 5:
        // embed
        //jQuery('#embedInput'+w.rand+':text').val('');
        w.embed.val('');
        w.bridWidgetEmbed.css('display', 'block');
        w.nn = true;
        w.closeDiv.css('display','block');
        w.cd = true;
        var yt = '';
        var autoplay = 0;
        var video;

      if(w.data.Video[numThumb].externalVideo)
      {
        playlistId =  '{ "src": "' + dataVideo[numThumb].currentSrc() + '", "name": "' + title + '", "image": "' + data.Video[numThumb].poster+ '"}';
      }

      if(w.config.yt)
      {  
        for(var i in w.data.Video)
        {
          video = w.data.Video[i];

          if(video.external_url && video.external_url.indexOf('youtube') != -1)
          {
            yt = ', "yt" : { "src": "' + video.src + '", "name": "' + video.title + '", "image": "' + video.poster + '"}';
            break;
          }
        }
      }

      var embedText = '<script type="text/javascript" src="http://' + document.loadFromHost + '/player/build/brid.min.js"></script><div id="' + w.playerId+ '" class="brid" itemprop="video" itemscope itemtype="http://schema.org/VideoObject"><div id="' + w.playerId + '_adContainer">Initialize ads</div></div><script type="text/javascript"> $bp("' + w.playerId + '", {"id":"' + w.config.playerId + '"' + yt + ', "width":"' + w.thumbWidth + '","height":"' + w.thumbHeight + '","video":"' + playlistId + '", "autoplay":' + autoplay + ',"shared":true});</script><script type="text/javascript" src="http://imasdk.googleapis.com/js/sdkloader/ima3.js"></script>';
          
      w.embed.val(embedText);
      w.embed.select();
      break;
    }

    if(dataIndex < 4 )
    {
      window.open(url, 'PopUpWindow', 'width=' + 300 + ',height=' + 200 + ',toolbar=no,scrollbars=yes');
    }
    
  }
  this.organizeThumbsMobile = function(w){

        w.smallPlayIcon();

        w.bridWidgetCheck.each(function(k,v){
          
          jQuery(v).on('tap', w, w.thumbChecked);
          
          console.log('thumb checked', v, w.thumbChecked);

          jQuery(v).on('click', w.thumbChecked);
        });

        w.bridWidgetPlaylist.find('.bridWidgetThumb').each(function(k,v){            
          jQuery(v).on('tap', w, w.thumbClickMobile);
          jQuery(v).css({'display' : 'block', 'width' : '90%', 'margin-bottom' : '10px', 'margin-left' : '3%'});
        });            
        //share icons
            
        w.bridWidgetShares.find('.BridWShare').each(function(k,v){
                
          if(w.color == 0){

            switch (k) {
              case 0:
                // facebook
                jQuery(v).html('<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"width="45.1px" height="43.9px" viewBox="0 0 45.1 43.9" enable-background="new 0 0 45.1 43.9" xml:space="preserve"> <g> <g class="fHover"> <path fill="#FFFFFF" d="M45.1,37.8c0,3.4-2.7,6.1-6.1,6.1H6.1c-3.4,0-6.1-2.7-6.1-6.1V6.1C0,2.7,2.7,0,6.1,0H39 c3.4,0,6.1,2.7,6.1,6.1V37.8z"/> </g> <path fill="#575757" d="M25.3,9.9c0.8,0,1.3,0,1.9,0.2l0.6,0.2v-2l-0.4-0.1c-0.7-0.2-1.3-0.3-2.1-0.3c-3.1,0-5.1,2.1-5.1,5.5v3.3 h-3.9v1.9h3.9v17.2h2.1V18.6h5.1v-1.9h-5.1v-3.4C22.4,10.5,24,9.9,25.3,9.9z"/> </g> </svg>'); break; 
              case 1:
                // twitter
                jQuery(v).html('<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"width="45.1px" height="43.9px" viewBox="0 0 45.1 43.9" enable-background="new 0 0 45.1 43.9" xml:space="preserve"> <g class="tHover"> <path fill="#FFFFFF" d="M45.1,37.8c0,3.4-2.7,6.1-6.1,6.1H6.1c-3.4,0-6.1-2.7-6.1-6.1V6.1C0,2.7,2.7,0,6.1,0H39 c3.4,0,6.1,2.7,6.1,6.1V37.8z"/> </g> <path fill="#575757" d="M18.9,34.8c-6.2,0-11.5-2.7-15.1-7.5c-0.2-0.2-0.1-0.5,0.1-0.7c0.2-0.2,0.5-0.2,0.7,0 c1.6,1.6,3.9,2.5,6.3,2.5c2.1,0,4.1-0.7,5.7-2c-1-0.2-1.7-0.8-1.9-1.6c-0.1-0.3-0.1-0.9,0.4-1.5c-2.2-0.3-3.2-1.9-3.4-2.5 c-0.1-0.2-0.1-0.4,0.1-0.6c0.3-0.3,0.6-0.6,1-0.7c-1.5-0.7-2.4-1.9-2.7-3.5c-0.1-0.3,0.1-0.5,0.4-0.6c0.2-0.1,0.5-0.1,0.8-0.2 c-1.7-1.3-2.2-3-2.1-4.3c0-0.2,0.1-0.3,0.2-0.4s0.3-0.1,0.4,0c3.9,1.4,6.8,2.7,9.5,4.2c0.7,0.4,1.4,0.9,2.3,1.8 c1.3-3.4,3-6.7,5.7-8.4c0.2-0.1,0.4-0.1,0.5,0C28,8.9,28,9,28.1,9.1c0.6-0.3,1.2-0.5,1.8-0.6c0.2,0,0.3,0,0.4,0.1s0.2,0.3,0.1,0.4 c0,0,0,0.1,0,0.1c0.2,0,0.5-0.1,0.7-0.1c0.6,0,0.9,0.3,1,0.5c0.1,0.2,0.1,0.5,0,0.7c-0.2,0.4-0.6,0.6-1.1,0.8c2.7,0.8,5,3.2,5.8,6.2 c0.1,0.2,0.1,0.4,0.2,0.6c0.2,0.1,0.5,0.1,0.9,0.1c1.2,0,2.4-0.4,2.8-0.6c0.2-0.1,0.4-0.1,0.6,0c0.2,0.1,0.2,0.4,0.1,0.6 c-0.4,0.9-1.2,1.7-2.2,2.1c0.7,0.1,1.3,0,1.8,0c0.2,0,0.4,0.1,0.5,0.3c0.1,0.2,0.1,0.4-0.1,0.6c-1.1,1.1-2.5,1.7-4.3,1.8 C35,29.8,27.5,34.8,18.9,34.8z M7,29.4c3.2,2.9,7.3,4.4,11.9,4.4c8.1,0,15.5-5,17.1-11.6c0.1-0.2,0.3-0.4,0.5-0.4c0,0,0,0,0,0 c0,0,0,0,0,0c1.1,0,2-0.2,2.8-0.6c-1,0-2.1-0.2-2.8-0.5c-0.2-0.1-0.3-0.3-0.3-0.5c0-0.2,0.2-0.4,0.5-0.4c1.1-0.1,2-0.4,2.6-0.9 c-1.1,0.2-2.3,0.2-3.1-0.1c-0.2-0.1-0.3-0.2-0.3-0.4c0-0.3-0.1-0.5-0.2-0.8c-0.9-3.5-4.1-6-7.2-5.7c-0.3,0-0.5-0.1-0.5-0.4 s0.1-0.5,0.3-0.6c0.3-0.1,0.6-0.2,0.9-0.3c0.1,0,0.2-0.1,0.4-0.1c0.6-0.1,1-0.3,1.3-0.4c-0.6,0.1-1.6,0.5-2.2,0.7 c-0.2,0.1-0.4,0.2-0.5,0.2c-0.3,0.1-0.5-0.1-0.6-0.3c0,0,0,0,0,0c0,0-0.1,0.1-0.1,0.1c-0.2,0.2-0.5,0.2-0.7,0c0,0,0,0,0,0 c-1.9,1.9-3.2,4.7-4.3,7.7c-0.1,0.2-0.2,0.3-0.4,0.3c-0.2,0-0.3,0-0.5-0.1c-1.1-1.1-2-1.8-2.6-2.1c-2.5-1.3-5.2-2.5-8.6-3.9 c0.2,1.1,1,2.5,2.8,3.4c0.2,0.1,0.3,0.4,0.2,0.6c-0.1,0.2-0.3,0.4-0.6,0.3c-0.3,0-0.9,0-1.6,0.2c0.3,1.1,1.1,2.2,3.6,2.8 c0.2,0.1,0.4,0.3,0.4,0.5c0,0.2-0.2,0.4-0.5,0.5c-1,0.1-1.5,0.3-1.9,0.6c0.5,0.7,1.6,1.9,3.8,1.6c0.2,0,0.5,0.1,0.5,0.4 c0.1,0.2-0.1,0.5-0.3,0.6c-0.8,0.4-1.2,0.8-1.2,1.3c0.1,0.5,0.9,1.1,2,0.9c0.2,0,0.4,0.1,0.5,0.3s0.1,0.4-0.1,0.6 c-1.9,2-4.5,3.1-7.3,3.1C9.5,30.1,8.2,29.9,7,29.4z"/> </svg>'); 
                  break;

              case 2:
                  // google plus
                jQuery(v).html('<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"width="45.1px" height="43.9px" viewBox="0 0 45.1 43.9" enable-background="new 0 0 45.1 43.9" xml:space="preserve"> <g opacity="0.9" class="gHover1"> <path fill="#FFFFFF" d="M45.1,37.8c0,3.4-2.7,6.1-6.1,6.1H6.1c-3.4,0-6.1-2.7-6.1-6.1V6.1C0,2.7,2.7,0,6.1,0H39 c3.4,0,6.1,2.7,6.1,6.1V37.8z"/> </g> <g class="gHover2"> <path fill="#575757" d="M19,24.2c-3.9,0-7.1-3.2-7.1-7.1c0-3.9,3.2-7.1,7.1-7.1c3.9,0,7.1,3.2,7.1,7.1C26.2,21,23,24.2,19,24.2z M19,11c-3.4,0-6.1,2.7-6.1,6.1c0,3.4,2.7,6.1,6.1,6.1c3.4,0,6.1-2.7,6.1-6.1C25.2,13.7,22.4,11,19,11z"/> <path fill="#575757" d="M18.4,38c-4.3,0-7.7-2.7-7.7-6.1c0-3.4,3.5-6.1,7.7-6.1c4.3,0,7.7,2.7,7.7,6.1C26.1,35.2,22.7,38,18.4,38z M18.4,26.8c-3.7,0-6.8,2.3-6.8,5.1c0,2.8,3,5.1,6.8,5.1c3.7,0,6.8-2.3,6.8-5.1C25.2,29.1,22.2,26.8,18.4,26.8z"/> <path fill="#575757" d="M24.1,29.2c-3.6-3.6-1.2-7.2-1.2-7.3l0.8,0.5c-0.1,0.1-1.9,3,1.1,6.1L24.1,29.2z"/> <rect x="20.9" y="10.3" fill="#575757" width="4.7" height="1"/> <g> <rect x="27.9" y="13.9" fill="#575757" width="13.2" height="1"/> <rect x="33.7" y="7.8" fill="#575757" width="1" height="13.2"/> </g> </g> </svg>'); 
                  break; 
              case 3:
                 // reddit
                jQuery(v).html('<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"width="45.1px" height="43.9px" viewBox="0 0 45.1 43.9" enable-background="new 0 0 45.1 43.9" xml:space="preserve"> <g opacity="0.9"> <path fill="#FFFFFF" d="M45.1,37.8c0,3.4-2.7,6.1-6.1,6.1H6.1c-3.4,0-6.1-2.7-6.1-6.1V6.1C0,2.7,2.7,0,6.1,0H39 c3.4,0,6.1,2.7,6.1,6.1V37.8z"/> </g> <g class="gHover"> <path fill="#575757" d="M22.6,33.1c-8.4,0-15.2-4.3-15.2-9.6c0-5.3,6.8-9.6,15.2-9.6c8.4,0,15.2,4.3,15.2,9.6 C37.8,28.8,31,33.1,22.6,33.1z M22.6,14.9c-7.8,0-14.2,3.9-14.2,8.6c0,4.7,6.4,8.6,14.2,8.6s14.2-3.9,14.2-8.6 C36.8,18.7,30.5,14.9,22.6,14.9z"/> <path fill="#575757" d="M7.8,22.3c-0.8-0.7-1.2-1.7-1.2-2.8c0-2.1,1.7-3.9,3.9-3.9c0.9,0,1.9,0.3,2.6,1l-0.7,0.7 c-0.5-0.5-1.2-0.7-1.9-0.7c-1.6,0-2.9,1.3-2.9,2.9c0,0.8,0.3,1.5,0.9,2.1L7.8,22.3z"/> <circle fill="#575757" cx="17" cy="21.4" r="1.1"/> <path fill="#575757" d="M37.3,22.3l-0.7-0.7c0.6-0.5,0.9-1.3,0.9-2.1c0-1.6-1.3-2.9-2.9-2.9c-0.7,0-1.4,0.3-1.9,0.7L32,16.6 c0.7-0.6,1.6-1,2.6-1c2.1,0,3.9,1.7,3.9,3.9C38.5,20.6,38.1,21.6,37.3,22.3z"/> <circle fill="#575757" cx="28.1" cy="21.4" r="1.1"/> <path fill="#575757" d="M22.8,27.8c-3.1,0-5.9-1-7.2-2.5l0.8-0.6c1.1,1.3,3.6,2.1,6.5,2.1c2.6,0,4.9-0.7,6.2-1.8l0.7,0.7 C28.2,27,25.6,27.8,22.8,27.8z"/> <polygon fill="#575757" points="22.6,14.6 21.7,14.2 24.7,8 31.7,9.4 31.5,10.3 25.2,9.2  "/> <path fill="#575757" d="M33.2,12.6c-1.4,0-2.5-1.1-2.5-2.5s1.1-2.5,2.5-2.5s2.5,1.1,2.5,2.5S34.5,12.6,33.2,12.6z M33.2,8.6 c-0.8,0-1.5,0.7-1.5,1.5s0.7,1.5,1.5,1.5s1.5-0.7,1.5-1.5S34,8.6,33.2,8.6z"/> </g> </svg>'); 
                  break; 
              case 4:
                   // copy link
                jQuery(v).html('<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"width="45.1px" height="43.9px" viewBox="0 0 45.1 43.9" enable-background="new 0 0 45.1 43.9" xml:space="preserve"> <g opacity="0.9"> <path fill="#FFFFFF" d="M45.1,37.8c0,3.4-2.7,6.1-6.1,6.1H6.1c-3.4,0-6.1-2.7-6.1-6.1V6.1C0,2.7,2.7,0,6.1,0H39 c3.4,0,6.1,2.7,6.1,6.1V37.8z"/> </g> <g class="linkHover"> <path fill="#231F20" d="M16,27.7h-6c-3.7,0-6.7-3-6.7-6.7c0-3.7,3-6.7,6.7-6.7h9c3.4,0,6.3,2.6,6.7,6l-1,0.1 c-0.3-2.9-2.8-5.1-5.7-5.1h-9c-3.1,0-5.7,2.6-5.7,5.7c0,3.1,2.6,5.7,5.7,5.7h6V27.7z"/> <path fill="#231F20" d="M35,27.7h-9c-3.4,0-6.3-2.6-6.7-6l1-0.1c0.3,2.9,2.8,5.1,5.7,5.1h9c3.1,0,5.7-2.6,5.7-5.7 c0-3.1-2.6-5.7-5.7-5.7h-6v-1h6c3.7,0,6.7,3,6.7,6.7C41.8,24.7,38.7,27.7,35,27.7z"/> </g> </svg>');
                  break;
              case 5:
                    // embed
                jQuery(v).html('<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"width="45.1px" height="43.9px" viewBox="0 0 45.1 43.9" enable-background="new 0 0 45.1 43.9" xml:space="preserve"> <g opacity="0.9"> <path fill="#FFFFFF" d="M45.1,37.8c0,3.4-2.7,6.1-6.1,6.1H6.1c-3.4,0-6.1-2.7-6.1-6.1V6.1C0,2.7,2.7,0,6.1,0H39 c3.4,0,6.1,2.7,6.1,6.1V37.8z"/> </g> <g> <polygon fill="#575757" points="16.6,30.1 2.4,22 16.6,13.8 17.1,14.7 4.4,22 17.1,29.2   "/> <polygon fill="#575757" points="28.5,30.1 28,29.2 40.6,22 28,14.7 28.5,13.8 42.6,22   "/> <rect x="22.1" y="13.9" transform="matrix(0.9543 0.2989 -0.2989 0.9543 7.5963 -5.7507)" fill="#575757" width="1" height="16.1"/> </g> </svg>'); 
                  break;
            }
          }
          else {
            switch (k) {
              case 0:
                // facebook
                jQuery(v).html('<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"width="45.1px" height="43.9px" viewBox="0 0 45.1 43.9" enable-background="new 0 0 45.1 43.9" xml:space="preserve"> <g opacity="0.9" class="fHover"> <path d="M45.1,37.8c0,3.4-2.7,6.1-6.1,6.1H6.1c-3.4,0-6.1-2.7-6.1-6.1V6.1C0,2.7,2.7,0,6.1,0H39c3.4,0,6.1,2.7,6.1,6.1V37.8z"/> </g> <path fill="#FFFFFF" d="M25.3,9.9c0.8,0,1.3,0,1.9,0.2l0.6,0.2v-2l-0.4-0.1c-0.7-0.2-1.3-0.3-2.1-0.3c-3.1,0-5.1,2.1-5.1,5.5v3.3 h-3.9v1.9h3.9v17.2h2.1V18.6h5.1v-1.9h-5.1v-3.4C22.4,10.5,24,9.9,25.3,9.9z"/> </svg>'); break; 
              case 1:
                    // twitter
                jQuery(v).html('<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"width="45.1px" height="43.9px" viewBox="0 0 45.1 43.9" enable-background="new 0 0 45.1 43.9" xml:space="preserve"> <g opacity="0.9" class="tHover"> <path d="M45.1,37.8c0,3.4-2.7,6.1-6.1,6.1H6.1c-3.4,0-6.1-2.7-6.1-6.1V6.1C0,2.7,2.7,0,6.1,0H39c3.4,0,6.1,2.7,6.1,6.1V37.8z"/> </g> <path fill="#FFFFFF" d="M18.9,34.8c-6.2,0-11.5-2.7-15.1-7.5c-0.2-0.2-0.1-0.5,0.1-0.7c0.2-0.2,0.5-0.2,0.7,0 c1.6,1.6,3.9,2.5,6.3,2.5c2.1,0,4.1-0.7,5.7-2c-1-0.2-1.7-0.8-1.9-1.6c-0.1-0.3-0.1-0.9,0.4-1.5c-2.2-0.3-3.2-1.9-3.4-2.5 c-0.1-0.2-0.1-0.4,0.1-0.6c0.3-0.3,0.6-0.6,1-0.7c-1.5-0.7-2.4-1.9-2.7-3.5c-0.1-0.3,0.1-0.5,0.4-0.6c0.2-0.1,0.5-0.1,0.8-0.2 c-1.7-1.3-2.2-3-2.1-4.3c0-0.2,0.1-0.3,0.2-0.4c0.1-0.1,0.3-0.1,0.4,0c3.9,1.4,6.8,2.7,9.5,4.2c0.7,0.4,1.4,0.9,2.3,1.8 c1.3-3.4,3-6.7,5.7-8.4c0.2-0.1,0.4-0.1,0.5,0C28,8.9,28,9,28.1,9.1c0.6-0.3,1.2-0.5,1.8-0.6c0.2,0,0.3,0,0.4,0.1 c0.1,0.1,0.2,0.3,0.1,0.4v0.1c0.2,0,0.5-0.1,0.7-0.1c0.6,0,0.9,0.3,1,0.5c0.1,0.2,0.1,0.5,0,0.7c-0.2,0.4-0.6,0.6-1.1,0.8 c2.7,0.8,5,3.2,5.8,6.2c0.1,0.2,0.1,0.4,0.2,0.6c0.2,0.1,0.5,0.1,0.9,0.1c1.2,0,2.4-0.4,2.8-0.6c0.2-0.1,0.4-0.1,0.6,0 c0.2,0.1,0.2,0.4,0.1,0.6c-0.4,0.9-1.2,1.7-2.2,2.1c0.7,0.1,1.3,0,1.8,0c0.2,0,0.4,0.1,0.5,0.3c0.1,0.2,0.1,0.4-0.1,0.6 c-1.1,1.1-2.5,1.7-4.3,1.8C35,29.8,27.5,34.8,18.9,34.8z M7,29.4c3.2,2.9,7.3,4.4,11.9,4.4c8.1,0,15.5-5,17.1-11.6 c0.1-0.2,0.3-0.4,0.5-0.4l0,0l0,0c1.1,0,2-0.2,2.8-0.6c-1,0-2.1-0.2-2.8-0.5c-0.2-0.1-0.3-0.3-0.3-0.5s0.2-0.4,0.5-0.4 c1.1-0.1,2-0.4,2.6-0.9c-1.1,0.2-2.3,0.2-3.1-0.1c-0.2-0.1-0.3-0.2-0.3-0.4c0-0.3-0.1-0.5-0.2-0.8c-0.9-3.5-4.1-6-7.2-5.7 c-0.3,0-0.5-0.1-0.5-0.4s0.1-0.5,0.3-0.6c0.3-0.1,0.6-0.2,0.9-0.3c0.1,0,0.2-0.1,0.4-0.1c0.6-0.1,1-0.3,1.3-0.4 c-0.6,0.1-1.6,0.5-2.2,0.7c-0.2,0.1-0.4,0.2-0.5,0.2c-0.3,0.1-0.5-0.1-0.6-0.3l0,0l-0.1,0.1c-0.2,0.2-0.5,0.2-0.7,0l0,0 c-1.9,1.9-3.2,4.7-4.3,7.7c-0.1,0.2-0.2,0.3-0.4,0.3s-0.3,0-0.5-0.1c-1.1-1.1-2-1.8-2.6-2.1c-2.5-1.3-5.2-2.5-8.6-3.9 c0.2,1.1,1,2.5,2.8,3.4c0.2,0.1,0.3,0.4,0.2,0.6c-0.1,0.2-0.3,0.4-0.6,0.3c-0.3,0-0.9,0-1.6,0.2c0.3,1.1,1.1,2.2,3.6,2.8 c0.2,0.1,0.4,0.3,0.4,0.5S15,20.9,14.7,21c-1,0.1-1.5,0.3-1.9,0.6c0.5,0.7,1.6,1.9,3.8,1.6c0.2,0,0.5,0.1,0.5,0.4 c0.1,0.2-0.1,0.5-0.3,0.6c-0.8,0.4-1.2,0.8-1.2,1.3c0.1,0.5,0.9,1.1,2,0.9c0.2,0,0.4,0.1,0.5,0.3c0.1,0.2,0.1,0.4-0.1,0.6 c-1.9,2-4.5,3.1-7.3,3.1C9.5,30.1,8.2,29.9,7,29.4z"/> </svg>'); 
                  break;

              case 2:
                    // google plus
                jQuery(v).html('<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"width="45.1px" height="43.9px" viewBox="0 0 45.1 43.9" enable-background="new 0 0 45.1 43.9" xml:space="preserve"> <g opacity="0.9" class="gHover1"> <path d="M45.1,37.8c0,3.4-2.7,6.1-6.1,6.1H6.1c-3.4,0-6.1-2.7-6.1-6.1V6.1C0,2.7,2.7,0,6.1,0H39c3.4,0,6.1,2.7,6.1,6.1V37.8z"/> </g> <g class="gHover2"> <path fill="#FFFFFF" d="M19,24.2c-3.9,0-7.1-3.2-7.1-7.1c0-3.9,3.2-7.1,7.1-7.1c3.9,0,7.1,3.2,7.1,7.1C26.2,21,23,24.2,19,24.2z M19,11c-3.4,0-6.1,2.7-6.1,6.1c0,3.4,2.7,6.1,6.1,6.1c3.4,0,6.1-2.7,6.1-6.1C25.2,13.7,22.4,11,19,11z"/> <path fill="#FFFFFF" d="M18.4,38c-4.3,0-7.7-2.7-7.7-6.1c0-3.4,3.5-6.1,7.7-6.1c4.3,0,7.7,2.7,7.7,6.1C26.1,35.2,22.7,38,18.4,38z M18.4,26.8c-3.7,0-6.8,2.3-6.8,5.1s3,5.1,6.8,5.1c3.7,0,6.8-2.3,6.8-5.1S22.2,26.8,18.4,26.8z"/> <path fill="#FFFFFF" d="M24.1,29.2c-3.6-3.6-1.2-7.2-1.2-7.3l0.8,0.5c-0.1,0.1-1.9,3,1.1,6.1L24.1,29.2z"/> <rect x="20.9" y="10.3" fill="#FFFFFF" width="4.7" height="1"/> <g> <rect x="27.9" y="13.9" fill="#FFFFFF" width="13.2" height="1"/> <rect x="33.7" y="7.8" fill="#FFFFFF" width="1" height="13.2"/> </g> </g> </svg>'); 
                  break; 
              case 3:
                    // reddit
                jQuery(v).html('<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"width="45.1px" height="43.9px" viewBox="0 0 45.1 43.9" enable-background="new 0 0 45.1 43.9" xml:space="preserve"> <g opacity="0.9"> <path d="M45.1,37.8c0,3.4-2.7,6.1-6.1,6.1H6.1c-3.4,0-6.1-2.7-6.1-6.1V6.1C0,2.7,2.7,0,6.1,0H39c3.4,0,6.1,2.7,6.1,6.1V37.8z"/> </g> <g class="gHover"> <path fill="#FFFFFF" d="M22.6,33.1c-8.4,0-15.2-4.3-15.2-9.6s6.8-9.6,15.2-9.6c8.4,0,15.2,4.3,15.2,9.6S31,33.1,22.6,33.1z M22.6,14.9c-7.8,0-14.2,3.9-14.2,8.6s6.4,8.6,14.2,8.6s14.2-3.9,14.2-8.6C36.8,18.7,30.5,14.9,22.6,14.9z"/> <path fill="#FFFFFF" d="M7.8,22.3c-0.8-0.7-1.2-1.7-1.2-2.8c0-2.1,1.7-3.9,3.9-3.9c0.9,0,1.9,0.3,2.6,1l-0.7,0.7 c-0.5-0.5-1.2-0.7-1.9-0.7c-1.6,0-2.9,1.3-2.9,2.9c0,0.8,0.3,1.5,0.9,2.1L7.8,22.3z"/> <circle fill="#FFFFFF" cx="17" cy="21.4" r="1.1"/> <path fill="#FFFFFF" d="M37.3,22.3l-0.7-0.7c0.6-0.5,0.9-1.3,0.9-2.1c0-1.6-1.3-2.9-2.9-2.9c-0.7,0-1.4,0.3-1.9,0.7L32,16.6 c0.7-0.6,1.6-1,2.6-1c2.1,0,3.9,1.7,3.9,3.9C38.5,20.6,38.1,21.6,37.3,22.3z"/> <circle fill="#FFFFFF" cx="28.1" cy="21.4" r="1.1"/> <path fill="#FFFFFF" d="M22.8,27.8c-3.1,0-5.9-1-7.2-2.5l0.8-0.6c1.1,1.3,3.6,2.1,6.5,2.1c2.6,0,4.9-0.7,6.2-1.8l0.7,0.7 C28.2,27,25.6,27.8,22.8,27.8z"/> <polygon fill="#FFFFFF" points="22.6,14.6 21.7,14.2 24.7,8 31.7,9.4 31.5,10.3 25.2,9.2  "/> <path fill="#FFFFFF" d="M33.2,12.6c-1.4,0-2.5-1.1-2.5-2.5c0-1.4,1.1-2.5,2.5-2.5c1.4,0,2.5,1.1,2.5,2.5 C35.7,11.5,34.5,12.6,33.2,12.6z M33.2,8.6c-0.8,0-1.5,0.7-1.5,1.5c0,0.8,0.7,1.5,1.5,1.5c0.8,0,1.5-0.7,1.5-1.5 C34.7,9.3,34,8.6,33.2,8.6z"/> </g> </svg>'); 
                    break; 
              case 4:
                   // copy link
                jQuery(v).html('<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"width="45.1px" height="43.9px" viewBox="0 0 45.1 43.9" enable-background="new 0 0 45.1 43.9" xml:space="preserve"> <g opacity="0.9"> <path d="M45.1,37.8c0,3.4-2.7,6.1-6.1,6.1H6.1c-3.4,0-6.1-2.7-6.1-6.1V6.1C0,2.7,2.7,0,6.1,0H39c3.4,0,6.1,2.7,6.1,6.1V37.8z"/> </g> <g class="linkHover"> <path fill="#FFFFFF" d="M16,27.7h-6c-3.7,0-6.7-3-6.7-6.7s3-6.7,6.7-6.7h9c3.4,0,6.3,2.6,6.7,6l-1,0.1c-0.3-2.9-2.8-5.1-5.7-5.1h-9 c-3.1,0-5.7,2.6-5.7,5.7c0,3.1,2.6,5.7,5.7,5.7h6V27.7z"/> <path fill="#FFFFFF" d="M35,27.7h-9c-3.4,0-6.3-2.6-6.7-6l1-0.1c0.3,2.9,2.8,5.1,5.7,5.1h9c3.1,0,5.7-2.6,5.7-5.7 c0-3.1-2.6-5.7-5.7-5.7h-6v-1h6c3.7,0,6.7,3,6.7,6.7C41.8,24.7,38.7,27.7,35,27.7z"/> </g> </svg>');
                  break;
              case 5:
                    // embed
                jQuery(v).html('<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"width="45.1px" height="43.9px" viewBox="0 0 45.1 43.9" enable-background="new 0 0 45.1 43.9" xml:space="preserve"> <g opacity="0.9"> <path d="M45.1,37.8c0,3.4-2.7,6.1-6.1,6.1H6.1c-3.4,0-6.1-2.7-6.1-6.1V6.1C0,2.7,2.7,0,6.1,0H39c3.4,0,6.1,2.7,6.1,6.1V37.8z"/> </g> <g> <polygon fill="#FFFFFF" points="16.6,30.1 2.4,22 16.6,13.8 17.1,14.7 4.4,22 17.1,29.2   "/> <polygon fill="#FFFFFF" points="28.5,30.1 28,29.2 40.6,22 28,14.7 28.5,13.8 42.6,22   "/> <rect x="22.1" y="13.9" transform="matrix(-0.9543 -0.2989 0.2989 -0.9543 37.6114 49.6551)" fill="#FFFFFF" width="1" height="16.1"/> </g> </svg>'); 
                  break;
            }

          }
          
         

          jQuery(v).attr('data-index',k);
          jQuery(v).on('tap', w, w.shareClick);

          });

          w.bridWidget.find('.bridWidgetThumb').each(function(k,v){
            jQuery(v).css('height', w.thumbHeight);
          });   
        
          w.closeDiv.on('tap', w.closeEmbed);

          jQuery(document).on('click','.embed',function(){ this.select(); });

          //var idPl = w.playlist.attr('id');

          var idPl = w.bridWidgetWrapper.attr('id');


          var playlistHeight = (w.thumbHeight * (w.videoLength -1)) + ((w.videoLength -1) * 10);

          w.bridWidget.css('height', playlistHeight);
          w.playlist.css('height', playlistHeight);

          console.log('playlist', w.bridWidget, 'aaaaa', idPl);

          //alert(idPl);

     

          var wrapper = document.getElementById(idPl);
            w.myScroll = new IScroll(wrapper, {
            scrollbars: true,
            resizeScrollbars: true,
            interactiveScrollbars: true,
            preventDefaultException: { tagName: /^(svg|path|rect|circle)$/ }
          });

          w.myScroll.on('beforeScrollStart', w.refresh);
          
            jQuery(window).resize(function(){
            w.resizeW();
          });
  }

  this.organizeThumbsDesktop = function(w) {

    if(w.config.playlistType==1 || w.config.playlistType==2)
            {
              w.videoLength=w.videoLength-1;
            }  
            
            var margin = w.config.offset/2; //margin thumb
             
            w.bridWidgetPlaylistWidth = w.videoLength * (w.thumbWidth + (margin*2));
            w.bridWidgetPlaylistWidth -=10; // -10 first and last magin
            
            if(w.bridWidgetPlaylistWidth <= w.playlistWidth)
            {

              w.left.css('display', 'none');
              w.right.css('display', 'none');
              w.leftVisible = false;
              w.rightVisible = false;
              w.playlist.css('text-align', 'center');
            }
               
            var mark = 1;

            var errorPixel = w.width - (((w.config.thumbNumber-1)*w.config.offset) +  (w.config.thumbNumber*w.thumbWidth));
              w.errorPixel = errorPixel;
             // console.log('errorPixel', w.errorPixel);
            w.bridWidgetPlaylist.find('.bridWidgetThumb').each(function (k,v){

              var top = (w.thumbHeight-w.smallplayHeight)/2;  //top of play icon
              var left = (w.thumbWidth-w.smallplayWidth)/2;   //left of play icon

              jQuery(v).find('.bridWidgetSmallPlay').css({'width':w.smallplayWidth, 'height':w.smallplayHeight, 'top':top+'px', 'left':left+'px', 'display':'none'});

              jQuery(v).css({'width':w.thumbWidth, 'height': w.thumbHeight});
              jQuery(v).find('.snapshot').css({'width':w.thumbWidth, 'height': w.thumbHeight});
              jQuery(v).find('.brid-widget-black').css({'width': w.thumbWidth, 'height': w.thumbHeight});

              if(w.thumbWidth < 130)
              {
                jQuery(v).find('.brid-widget-title').css('display','none');
              }
                
              jQuery(v).css('margin-left',margin+'px').css('margin-right',margin+'px');

              if(k==0)
              {
                jQuery(v).css('margin-left','0px');  
              }
              //console.log('k', k, 'w len', (w.videoLength-1));
             
             
              //Number of spaces between thumbs + thumbWidth * thumbNumber minus Widget Width
              if(w.config.thumbNumber!=2)
              {
                  if(k == mark )
                  {
                    w.correctedThumbNum++;
                    //jQuery(v).css('border', '1px solid #ff0000');
                    mark += w.config.thumbNumber;
                    var m = errorPixel/2;
                    var mLeft = parseInt(jQuery(v).css('margin-left'));
                    if(k == 1)
                    jQuery(v).css('margin-left',(mLeft+m)+'px');
                    jQuery(v).css('margin-right',(mLeft+m)+'px');
                     
                    
                  }
              }
               if(k == w.videoLength-1)
              {
                jQuery(v).css('margin-right','0');             
              }

              jQuery(v).on('click', w, w.thumbClick);

              jQuery(v).hover(function(){
                w.thumbOver(v);
              }, function(){
                w.thumbOut(v);
              });

              jQuery(v).css({'display' : 'inline-block'}); //.fadeIn();

              });
              

            w.thumbOver = function(v){
              jQuery(v).find('.brid-widget-black').hide();
              jQuery(v).find('.bridWidgetSmallPlay').show();
              jQuery(v).find('.brid-widget-title').animate({bottom : '-90px'},200);
            }

            w.thumbOut = function(v){
              jQuery(v).find('.brid-widget-black').show();
              jQuery(v).find('.bridWidgetSmallPlay').hide();
              jQuery(v).find('.brid-widget-title').animate({bottom : '0px'},100);       
            }

            w.hoverVisible = function()
            {
              if(w.leftVisible)
              {
                w.left.removeClass('leftOut');
                w.left.addClass('leftIn');
              }
              if(w.rightVisible)
              {
                jQuery(w.right).fadeIn("slow");
                w.right.removeClass('rightOut');
                w.right.addClass('rightIn');
              }
              clearTimeout(w.foTimeOut);  
             }

             w.hoverHidden = function()
             {
                w.foTimeOut = setTimeout(function(){
                  w.left.removeClass('leftIn');
                  w.right.removeClass('rightIn');
                  w.left.addClass('leftOut');
                  w.right.addClass('rightOut');
                }, 1000);
             }


            jQuery(w.playlist).hover(w.hoverVisible, w.hoverHidden);
            jQuery(w.left).hover(w.hoverVisible, w.hoverHidden);
            jQuery(w.right).hover(w.hoverVisible, w.hoverHidden);

            var width = w.bridWidgetPlaylistWidth;

            if(w.config.thumbNumber > w.videoLength)
            {
              width = w.videoLength * (w.thumbWidth + w.config.offset);
            } 

            if(w.correctedThumbNum>0){
               width += (w.correctedThumbNum*w.errorPixel);
              //alert('Fixed:'+w.bridWidgetPlaylistWidth);
            }
            w.bridWidgetPlaylist.css({'width': width+'px', 'max-width': width+'px', 'height': w.thumbHeight});
            
  }

  this.loadPlaylist();
  return this;
}

var $BridWidgets = {

    widgets : [],

    init : function(conf){

        var widgets = this.widgets;
       
        jQuery('.bridWidget').each(function(k,v){
          if(jQuery(v).attr('data-loaded')==undefined){
            jQuery(v).attr('data-loaded', 'true');
            widgets.push(new $BridWidget(v, conf));
          }

        });


    }
};